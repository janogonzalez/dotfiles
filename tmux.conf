# Pretty colors
set -g default-terminal "screen-256color"

# Escape delay
set -sg escape-time 1

# Reload config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind -Tcopy-mode-vi 'Enter'
bind-key -Tcopy-mode-vi 'Enter' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'

# Use screen keybinding
unbind C-b
set -g prefix C-a
# Keep the keybinding if we press twice
bind C-a send-prefix

# Start windows and panels with 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when killing one
set-option -g renumber-windows on

# Copy/Paste in OS X
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Enable mouse support
set -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M

#### COLORS

set -g status-left-length 32
set -g status-right-length 150

set -g window-status-activity-attr bold
set -g pane-border-fg brightgreen
set -g pane-active-border-fg brightgreen
set -g message-fg yellow
set -g message-bg white
set -g message-attr bold

# For Solarized light
#set -g status-fg brightblue
#set -g status-bg brightwhite
#set -g status-left '#[fg=white,bg=brightcyan,bold] ❐ #S #[fg=brightcyan,bg=brightwhite,nobold]⮀'
#set -g window-status-format "#[fg=yellow,bg=brightwhite] #I #W "
#set -g window-status-current-format "#[fg=brightwhite,bg=yellow]⮀#[fg=brightwhite,bg=yellow,noreverse,bold] #I ⮁ #W #[fg=yellow,bg=brightwhite,nobold]⮀"
#set -g status-right '#[fg=brightcyan]'

# For Solarized dark
#set -g status-fg brightblue
#set -g status-bg brightblack
#set -g status-left '#[fg=black,bg=brightgreen,bold] ❐ #S #[fg=brightgreen,bg=brightblack,nobold]⮀'
#set -g window-status-format "#[fg=blue,bg=brightblack] #I #W "
#set -g window-status-current-format "#[fg=brightblack,bg=blue]⮀#[fg=brightblack,bg=blue,noreverse,bold] #I ⮁ #W #[fg=blue,bg=brightblack,nobold]⮀"
#set -g status-right '#[fg=brightcyan]'

# For Base16-Monokai
#set -g status-fg brightwhite
#set -g status-bg black
#set -g status-left '#[fg=white,bg=brightgreen,bold] ❐ #S #[fg=brightgreen,bg=black,nobold]⮀'
#set -g window-status-format "#[fg=red,bg=black] #I #W "
#set -g window-status-current-format "#[fg=black,bg=red]⮀#[fg=white,bg=red,noreverse,bold] #I ⮁ #W #[fg=red,bg=black,nobold]⮀"
#set -g status-right '#[fg=brightcyan]'

# For Dracula
set -g status-fg colour254
set -g status-bg colour234
set -g status-left '#[fg=colour234,bg=magenta,bold] ❐ #S #[fg=magenta,bg=colour234,nobold]⮀'
set -g window-status-format "#[fg=colour254,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=blue]⮀#[fg=blue,bg=color234,noreverse,bold] #I ⮁ #W #[fg=blue,bg=colour234,nobold]⮀"
set -g status-right '#[fg=brightcyan]'
